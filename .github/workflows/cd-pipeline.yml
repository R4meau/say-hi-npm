name: Auto-publish and auto-release
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - prod
jobs:
  check-and-build:
    name: Check status and build on version bump
    outputs:
      tag: ${{ env.tag }}
      version_changed: ${{ steps.check.outputs.changed }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '12.16.3'

      - name: Check version changes
        uses: EndBug/version-check@v1
        id: check
        with:
          diff-search: true

      - name: Check latest tag
        if: contains(github.ref, 'prod') || github.event_name == 'workflow_dispatch'
        run: |
          echo "tag=latest" >> $GITHUB_ENV
      
      - name: Check versioned release
        if: contains(github.ref, 'main')
        run: echo "tag=v${{ steps.check.outputs.version }}" >> $GITHUB_ENV
        
      - name: Build
        if: steps.check.outputs.changed == 'true'
        run: |
          echo "Building ${{ env.tag }}"
          npm ci
          npx tsc index.ts
      
      - name: Prepare artifact
        if: steps.check.outputs.changed == 'true'
        run: cp index.js index-${{ env.tag }}.js

      - name: Upload artifacts
        if: steps.check.outputs.changed == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: build-files 
          path: |
            index-*.js
            index.js
          retention-days: 3
          if-no-files-found: error

  release-and-publish:
      name: Release and publish on version bump
      needs: build
      if: needs.build.outputs.version_changed == 'true'
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: '12.16.3'
            registry-url: 'https://registry.npmjs.org'

        - name: Download artifacts
          uses: actions/download-artifact@v2
          with:
            name: build-files

        - name: Publish to npm if latest release
          if: needs.build.outputs.tag == 'latest'
          run: npm publish --access public --tag latest
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

        - name: Create GitHub Release with artifact if versioned release
          if: needs.build.outputs.tag != 'latest'
          uses: softprops/action-gh-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            name: say-hi npm package ${{ needs.build.outputs.tag }}
            tag_name: ${{ needs.build.outputs.tag }}
            draft: false
            files: index-*.js
            fail_on_unmatched_files: true